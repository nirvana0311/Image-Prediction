# -*- coding: utf-8 -*-
"""
Created on Sat Jul 28 16:14:02 2018

@author: nirva
"""
import os
os.chdir("D:\\study\\IdeaProjects\\Sendtex deep learning\\Keras new\\Keras-Machine-Learning-Deep-Learning-Tutorial-master\\FLASK_SAURABH\\flask_apps")
import numpy as np
import keras
import base64
import io
from keras.preprocessing.image import img_to_array
from PIL import Image
from keras.applications.vgg16 import preprocess_input
from keras.applications.vgg16 import decode_predictions
from keras.models import load_model
from flask import request
from flask import jsonify
from flask import Flask
from flask_cors import CORS



app = Flask(__name__)
CORS(app)


def get_model():
    global model
    model = load_model('VGG16_Anything.h5')
    print(" * Model loaded!")

def preprocess_image(image, target_size):
    if image.mode != "RGB":
        image = image.convert("RGB")
    image = image.resize(target_size)
    image = img_to_array(image)
    image=image.reshape(1,image.shape[0],image.shape[1],image.shape[2])
    image = preprocess_input(image)

    return image

print(" * Loading Keras model...") 
get_model()

@app.route("/predict", methods=["POST"])
def predict():
    message = request.get_json(force=True)
    encoded = message['image']
    decoded = base64.b64decode(encoded)
    image = Image.open(io.BytesIO(decoded))
    processed_image = preprocess_image(image, target_size=(224, 224))
    
    prediction = model.predict(processed_image)
    label = decode_predictions(prediction)
    response = {
        'prediction': {
            'first': label[0][0][1],
            'second': label[0][1][1]    
        }
    }
    return jsonify(response)


    
    
    
#==============================================================================
# def predict():
#     message = request.get_json(force=True)
#     encoded = message['image']
#     decoded = base64.b64decode(encoded)
#     image = Image.open(io.BytesIO(decoded))
#     processed_image = preprocess_image(image, target_size=(224, 224))
#     prediction = model.predict(processed_image)
#     label = decode_predictions(prediction)
#     response = {
#         'prediction': {
#             'dog': label[0][0][1],
#             'cat': label[0][1][1]
#         }
#     }
#     return jsonify(response)
# 
#     
#     
#==============================================================================
#==============================================================================
# message=''    
# message=''
# 
# encoded = message
# 
# decoded = base64.b64decode(encoded)
# image = Image.open(io.BytesIO(decoded))
# processed_image = preprocess_image(image, target_size=(224, 224))
# prediction = model.predict(processed_image)
# label = decode_predictions(prediction)
# response = {
#     'prediction': {
#         'dog': label[0][0][1],
#         'cat': label[0][1][1]
#     }
# }
# 
# label
# #%reset -f
# 
#==============================================================================



